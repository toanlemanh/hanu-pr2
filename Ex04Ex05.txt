package HW.TUT9;

import utils.*;

/**
 * @overview HW.TUT9.Person owns MobilePhone
 * @attributes
 *      id      Integer
 *      name    String
 *      phone   MobilePhone
 * @object A typical HW.TUT9.Person p = <d,n,P>, where id(d), name(n), phone(p)
 * @abstract_properties
 *  mutable(id) = false /\ optional(id) = false /\ min(id) = 1 /\
 *      mutable(name) = true /\ optional(name) = false /\
 *      length(name) = 30 /\
 *          mutable(MobilePhone) = true /\ optional(name) = true
 *
 */
public class Person {
    @DomainConstraint(type = "Integer", mutable = false, optional = false, min = 1)
    private int id;

    @DomainConstraint(type = "String", mutable = true, optional = false, length = 30)
    private String name;

    @DomainConstraint(type = "MobilePhone", mutable = true, optional = true)
    private MobilePhone phone;

    /**
     * @modifies this
     * @effects
     *  if name is valid
     *      set this.name to name
     *      return true
     *      else
     *      return false
     */
    @DOpt(type = OptType.Mutator) @AttrRef("name")
    public boolean setName(String name){
        return false;
    }

    /**
     * @effects
     *      if this satisfies abstract properties
     *          return true
     *      else
     *          return false
     */
    public boolean greet(){
        return false;
    }

   public Person (String name, int id){
      this.name = name;
      this.id = id;
   }

   public Person (String name){
      this.name = name;
   }
}

/**
 * @overview MobilePhone is the phone that HW.TUT9.Person owns
 * @attributes
 *      manName     String
 *      model       String
 *      color       Character
 *      year        Integer
 *      guaranteed  Boolean
 * @object A typical MobilePhone M = <N,m,c,y,g>, where manName(N), model(m), color(c), year(y),
 *         guaranteed(g)
 * @abstract_properties
 *  mutable(manName) = true /\ optional(manName) = false /\
 *      length(manName) = 30 /\
 *      mutable(model) = false /\ optional(model) = false /\
 *          mutable(color) = true /\ optional(color) = false /\
 *              length(color) = 1 /\
 *              mutable(year) = true /\ optional(year) = true /\
 *                  length(year) = 4 /\
 *                   mutable(guaranteed) = false /\ optional(guaranteed) = true
 */
class MobilePhone{
    @DomainConstraint(type = "String", mutable = true, optional = false, length = 30)
    private String manName;

    @DomainConstraint(type = "String", mutable = false, optional = false)
    private String model;

    @DomainConstraint(type = "Character", mutable = true, optional = false, length = 1)
    private char color;

    @DomainConstraint(type = "Integer", mutable = true, optional = true, length = 4)
    private int year;

    @DomainConstraint(type = "Boolean", mutable = false, optional = true)
    private boolean guaranteed;

    /**
     *
     * @modifies this
     * @effects
     *      if color is valid
     *          set this. color to color
     *          return true
     *            else
     *              return false
     */
    @DOpt(type = OptType.Mutator) @AttrRef("color")
    public boolean setColor(char color){
        return false;
    }

     public MobilePhone (String manName, String model){
         this.manName = manName;
         this.model = model;
    }
    public MobilePhone (String manName){
         this.manName = manName;
         
    }
}
